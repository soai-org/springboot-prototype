<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapper 인터페이스와 연결할 네임스페이스 -->
<mapper namespace="com.human.team1.example.mapper.UserExampleMapper">
    <!-- SQL문의 종류가 무엇인지 태그로 시작함 -->
    <!-- resultType="com.human.team1.example.dto.UserExampleDTO"
     → SQL 실행 결과를 DTO로 매핑
     → VO가 아니라 DTO를 사용하는 이유:
        1. Mapper는 DB와 바로 연결되므로, DB 컬럼과 1:1 매핑되는 객체를 사용하는 것이 안전
        2. DTO는 데이터 전달용 객체(Data Transfer Object)로, Service/Controller로 결과를 전달하는 용도
     → VO는 일반적으로 비즈니스 로직에서 사용하거나, Service에서 DTO를 VO로 변환한 후 사용 -->
    <select id="selectAllUsers" resultType="com.human.team1.example.dto.UserExampleDTO">
        SELECT id, password, name, age
        FROM users
    </select>

    <select id="selectUserById" parameterType="String" resultType="com.human.team1.example.dto.UserExampleDTO">
        SELECT id, password, name, age
        FROM users
        WHERE id = #{id}    <!-- #{id} → MyBatis가 파라미터 id 값으로 치환 -->
    </select>

    <insert id="insertUser" parameterType="com.human.team1.example.dto.UserExampleDTO">
        INSERT INTO users(id, password, name, age)
        VALUES(#{id}, #{password}, #{name}, #{age})
    </insert>

</mapper>